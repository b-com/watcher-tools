---

# Copyright (c) 2015 b<>com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#Install system dependencies
- include: packages.yml

- name: Generate and push Watcher Docker Compose file
  template:
    src: compose-watcher.yml.j2
    dest: "{{ docker_compose_file_dir }}/compose-watcher.yml"

- name: Pulling latest docker images for watcher chain
  shell: docker-compose -f {{ docker_compose_file_dir }}/compose-watcher.yml pull
  when: docker_force_pulling

- name: Start watcher chain
  shell: docker-compose -f {{ docker_compose_file_dir }}/compose-watcher.yml up -d

# Create watcher database in openstack db
#   mysql -u<mysql_user> -p<mysql_pwd> -e 'DROP DATABASE IF EXISTS watcher;'
#   mysql -u<mysql_user> -p<mysql_pwd> -e 'CREATE DATABASE watcher;'
#   mysql -u<mysql_user> -p<mysql_pwd> -e 'GRANT ALL PRIVILEGES ON watcher.* TO "watcher"@"localhost" IDENTIFIED BY "watcher";'
#   mysql -u<mysql_user> -p<mysql pwd> -e 'GRANT ALL PRIVILEGES ON watcher.* TO "watcher"@"%" IDENTIFIED BY "watcher";'
- name: Drop watcher database if existing
  mysql_db: >
    name="watcher"
    login_host="localhost"
    login_user="{{ mysql_user }}"
    login_password="{{ mysql_password }}"
    state=absent

- name: Create watcher database
  mysql_db: >
    name="watcher" 
    login_host="localhost"
    login_user="{{ mysql_user }}"
    login_password="{{ mysql_password }}"
    state=present

- name: Create watcher user with all priviledges
  mysql_user:
    user="watcher"
    password="watcher"
    host="%"
    priv="{{ item }}"
    login_host="localhost"
    login_user="{{ mysql_user }}"
    login_password="{{ mysql_password }}"
    state=present
  with_items:
    - 'watcher.*:ALL'
